#!/usr/bin/env node

/**
 * Module dependencies.
 */

var jss = require('../')
  , fs = require('fs');

/**
 * Arguments.
 */

var args = process.argv.slice(2);

/**
 * Paths to process.
 */

var paths = [];

/**
 * Statistics.
 */

var stats = {};

/**
 * Options.
 */

var options = { format: 'text' };

/**
 * Usage docs.
 */

var usage = [
    ''
  , '  Usage: jss [options] [file|dir ...]'
  , ''
  , '  Options:'
  , ''
  , '    -f, --format <name>  Output the given format. text, json'
  , '    -j, --json           Output JSON statistics'
  , '    -t, --text           Output human-readable plain-text stats'
  , '    -T, --totals         Output totals only'
  , '    -V, --version        Display the version of jss'
  , '    -h, --help           Display help information'
  , ''
].join('\n');

/**
 * Handle arguments.
 */

var arg;
while (args.length) {
  arg = args.shift();
  switch (arg) {
    case '-h':
    case '--help':
    case 'help':
      console.log(usage);
      process.exit(1);
    case '-V':
    case '--version':
      console.log(jss.version);
      process.exit(0);
      break;
    case '-j':
    case '--json':
      options.format = 'json';
      break;
    case '-t':
    case '--text':
      options.format = 'text';
      break;
    case '-T':
    case '--totals':
      options.totalsOnly = true;
      break;
    default:
      paths.push(arg);
  }
}

// process

var totals;
jss.find(paths, function(err, files){
  var pending = files.length;
  files.forEach(function(file){
    fs.readFile(file, 'utf8', function(err, str){
      if (err) throw err;
      stats[file] = jss.stats(str);
      if (totals) {
        Object.keys(stats[file]).forEach(function(key){
          totals[key] += stats[file][key];
        });
      } else {
        totals = stats[file];
      }
      --pending || done();
    });
  });
});

// finished

function done() {
  if (options.text) {}
  var format = jss.formats[options.format];
  if (!format) throw new Error('invalid format "' + options.format + '"');
  var obj = { totals: totals };
  if (!options.totalsOnly) for (var file in stats) obj[file] = stats[file];
  format(obj);
}